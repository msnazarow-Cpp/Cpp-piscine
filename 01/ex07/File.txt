Any function implemented in a header (except in the case of templates), and any
unprotected header, means 0 to the exercise.
• Every output goes to the standard output, and will be ended by a newline, unless
specified otherwise.
• The imposed filenames must be followed to the letter, as well as class names, function names and method names.
• Remember: You are coding in C++ now, not in C anymore. Therefore:
◦ The following functions are FORBIDDEN, and their use will be punished by
a 0, no questions asked: *alloc, *printf and free.
◦ You are allowed to use basically everything in the standard library. HOWEVER, it would be smart to try and use the C++-ish versions of the functions
you are used to in C, instead of just keeping to what you know, this is a
new language after all. And NO, you are not allowed to use the STL until
you actually are supposed to (that is, until module 08). That means no vectors/lists/maps/etc... or anything that requires an include <algorithm> until
then.
• Actually, the use of any explicitly forbidden function or mechanic will be punished
by a 0, no questions asked.
• Also note that unless otherwise stated, the C++ keywords "using namespace" and
"friend" are forbidden. Their use will be punished by a -42, no questions asked.
• Files associated with a class will always be ClassName.hpp and ClassName.cpp,
unless specified otherwise.
• Turn-in directories are ex00/, ex01/, . . . , exn/.
• You must read the examples thoroughly. They can contain requirements that are
not obvious in the exercise’s description. If something seems ambiguous, you don’t
understand C++ enough.
• Since you are allowed to use the C++ tools you learned about since the beginning,
you are not allowed to use any external library. And before you ask, that also means